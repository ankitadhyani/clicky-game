{"version":3,"sources":["components/Characters/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["Characters","props","react_default","a","createElement","className","src","image","alt","name","onClick","handleSelectedCharacter","id","Wrapper","children","App","state","charactersList","characters","score","topScore","selectedCharactersListIds","shuffleCharacters","_this","sort","Math","random","characterId","console","log","includes","setState","characterList","newSelectedCharArray","push","_this2","this","class","style","backgroundImage","height","components_Wrapper","map","character","components_Characters","key","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"k7BAuBeA,MApBf,SAAoBC,GAElB,OAEEC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAEZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACbC,IAAKL,EAAMM,MACXC,IAAKP,EAAMQ,KACXC,QAAS,kBAAMT,EAAMU,wBAAwBV,EAAMW,gBCFhDC,MARf,SAAiBZ,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZJ,EAAMa,kBCsGEC,oNApGbC,MAAQ,CACNC,eAAgBC,EAChBC,MAAO,EACPC,SAAU,EACVC,0BAA2B,MAI7BC,kBAAoB,WAClB,OAAOC,EAAKP,MAAMC,eAAeO,KAAK,iBAAM,GAAMC,KAAKC,cAKzDf,wBAA0B,SAACgB,GAQzB,GANAC,QAAQC,IAAI,oCACZD,QAAQC,IAAI,gBAAkBF,GAC9BC,QAAQC,IAAI,8BAAgCN,EAAKP,MAAMK,2BAIpDE,EAAKP,MAAMK,0BAA0BS,SAASH,GAC/CC,QAAQC,IAAI,gBAAkBF,EAAc,+BAG5CJ,EAAKQ,SAAS,CACZX,SAAUG,EAAKP,MAAMG,MACrBA,MAAO,EACPa,cAAeT,EAAKD,oBACpBD,0BAA2B,SAGxB,CAGL,IAAMY,EAAuBV,EAAKP,MAAMK,0BACxCY,EAAqBC,KAAKP,GAE1BJ,EAAKQ,SAAS,CACZV,0BAA2BY,EAC3BD,cAAeT,EAAKD,oBACpBH,MAAOI,EAAKP,MAAMG,MAAQ,8EAUvB,IAAAgB,EAAAC,KAEP,OACElC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAEhBH,EAAAC,EAAAC,cAAA,OAAKiC,MAAM,iDACTC,MAAO,CACLC,gBAAe,oCACfC,OAAO,UAGTtC,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,iDAGFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,oBAAYgC,KAAKpB,MAAMG,MAAvB,iBAA4CiB,KAAKpB,MAAMI,YAO3DlB,EAAAC,EAAAC,cAACqC,EAAD,KAEIL,KAAKpB,MAAMC,eAAeyB,IAAI,SAAAC,GAC5B,OACEzC,EAAAC,EAAAC,cAACwC,EAAD,CACEC,IAAKF,EAAU/B,GACfA,GAAI+B,EAAU/B,GACdH,KAAMkC,EAAUlC,KAChBF,MAAOoC,EAAUpC,MACjBI,wBAAyBwB,EAAKxB,qCAvF9BmC,IAAMC,YCDxBC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0a99c9e5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Characters(props) {\n\n  return (\n\n    <main className=\"container\">\n\n        <div className=\"img-container\">\n          <img className=\"btn\"\n            src={props.image}\n            alt={props.name}\n            onClick={() => props.handleSelectedCharacter(props.id)}\n          />\n        </div>\n\n    </main>\n\n  );\n\n}\n\nexport default Characters;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return (\n    <div className=\"wrapper\">\n      {props.children}\n    </div>\n  );\n}\n\nexport default Wrapper;\n","import React from 'react';\nimport Characters from \"./components/Characters\";\nimport Wrapper from \"./components/Wrapper\";\nimport characters from \"./characters.json\";\nimport './App.css';\n\nclass App extends React.Component {\n\n  state = {\n    charactersList: characters,\n    score: 0,\n    topScore: 0,\n    selectedCharactersListIds: []\n  }\n\n  //Shuffle the Avengers card before loading a game\n  shuffleCharacters = () => {\n    return this.state.charactersList.sort(() => 0.5 - Math.random());\n  };\n\n\n  //Function that triggeres when user selects a particular character\n  handleSelectedCharacter = (characterId) => {\n\n    console.log(\"Inside handleSelectedCharacter()\");\n    console.log(\"characterId: \" + characterId);\n    console.log(\"selectedCharactersListIds: \" + this.state.selectedCharactersListIds);\n\n\n    //If selected character id is in the array that means it has already been selected by the user\n    if(this.state.selectedCharactersListIds.includes(characterId)) {\n      console.log(\"Character id=\" + characterId + \" has already been selected.\");\n\n      //Reset values\n      this.setState({\n        topScore: this.state.score, //Update topScore value to the latest score\n        score: 0, //Reset score to 0,\n        characterList: this.shuffleCharacters(),\n        selectedCharactersListIds: [] //Reset selected character id array\n      });\n\n    } else {\n\n      //push selected character id to array to be referenced later\n      const newSelectedCharArray = this.state.selectedCharactersListIds;\n      newSelectedCharArray.push(characterId);\n\n      this.setState({\n        selectedCharactersListIds: newSelectedCharArray,\n        characterList: this.shuffleCharacters(),\n        score: this.state.score + 1 //Increment score by 1\n      });\n\n      // console.log(\"Character id=\" + characterId + \" is now added to the array.\");\n      // console.log(\"selectedCharactersListIds: \" + this.state.selectedCharactersListIds);\n\n    }\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <header className=\"jumbotron jumbotron-fluid\">\n\n          <div class=\"d-flex flex-wrap align-content-center cHeading\"\n            style={{\n              backgroundImage: `url(\"./images/AvengersBgImg.jpg\")`,\n              height:'300px'\n            }}\n            >\n            <h1>Clicky Game</h1>\n            <h2>Select a unique Avenger each time!</h2>\n          </div>\n          \n          <div className=\"cScoreCard\">\n            <h3>Score: {this.state.score} | Top-Score: {this.state.topScore}</h3>\n          </div>\n        \n        </header>\n        \n\n\n        <Wrapper>\n          {\n            this.state.charactersList.map(character => {\n              return (\n                <Characters\n                  key={character.id}\n                  id={character.id}\n                  name={character.name}\n                  image={character.image}\n                  handleSelectedCharacter={this.handleSelectedCharacter}\n                />\n              );\n            })\n          }\n        </Wrapper>\n\n      </div>\n    );\n  }\n\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}